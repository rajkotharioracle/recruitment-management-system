package model.EntityObject;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 30 12:24:20 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InterviewDetailsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        CandidateEmailId,
        InterviewerEmailId,
        EventId,
        FeedbackId,
        RoundNo,
        Status,
        StartTime,
        EndTime,
        EventDetailsEO,
        CandidateDataEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CANDIDATEEMAILID = AttributesEnum.CandidateEmailId.index();
    public static final int INTERVIEWEREMAILID = AttributesEnum.InterviewerEmailId.index();
    public static final int EVENTID = AttributesEnum.EventId.index();
    public static final int FEEDBACKID = AttributesEnum.FeedbackId.index();
    public static final int ROUNDNO = AttributesEnum.RoundNo.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int STARTTIME = AttributesEnum.StartTime.index();
    public static final int ENDTIME = AttributesEnum.EndTime.index();
    public static final int EVENTDETAILSEO = AttributesEnum.EventDetailsEO.index();
    public static final int CANDIDATEDATAEO = AttributesEnum.CandidateDataEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InterviewDetailsEOImpl() {
    }

    /**
     * Gets the attribute value for CandidateEmailId, using the alias name CandidateEmailId.
     * @return the value of CandidateEmailId
     */
    public String getCandidateEmailId() {
        return (String) getAttributeInternal(CANDIDATEEMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CandidateEmailId.
     * @param value value to set the CandidateEmailId
     */
    public void setCandidateEmailId(String value) {
        setAttributeInternal(CANDIDATEEMAILID, value);
    }

    /**
     * Gets the attribute value for InterviewerEmailId, using the alias name InterviewerEmailId.
     * @return the value of InterviewerEmailId
     */
    public String getInterviewerEmailId() {
        return (String) getAttributeInternal(INTERVIEWEREMAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterviewerEmailId.
     * @param value value to set the InterviewerEmailId
     */
    public void setInterviewerEmailId(String value) {
        setAttributeInternal(INTERVIEWEREMAILID, value);
    }

    /**
     * Gets the attribute value for EventId, using the alias name EventId.
     * @return the value of EventId
     */
    public Integer getEventId() {
        return (Integer) getAttributeInternal(EVENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EventId.
     * @param value value to set the EventId
     */
    public void setEventId(Integer value) {
        setAttributeInternal(EVENTID, value);
    }

    /**
     * Gets the attribute value for FeedbackId, using the alias name FeedbackId.
     * @return the value of FeedbackId
     */
    public Integer getFeedbackId() {
        return (Integer) getAttributeInternal(FEEDBACKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FeedbackId.
     * @param value value to set the FeedbackId
     */
    public void setFeedbackId(Integer value) {
        setAttributeInternal(FEEDBACKID, value);
    }

    /**
     * Gets the attribute value for RoundNo, using the alias name RoundNo.
     * @return the value of RoundNo
     */
    public Integer getRoundNo() {
        return (Integer) getAttributeInternal(ROUNDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoundNo.
     * @param value value to set the RoundNo
     */
    public void setRoundNo(Integer value) {
        setAttributeInternal(ROUNDNO, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for StartTime, using the alias name StartTime.
     * @return the value of StartTime
     */
    public Date getStartTime() {
        return (Date) getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartTime.
     * @param value value to set the StartTime
     */
    public void setStartTime(Date value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for EndTime, using the alias name EndTime.
     * @return the value of EndTime
     */
    public Date getEndTime() {
        return (Date) getAttributeInternal(ENDTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndTime.
     * @param value value to set the EndTime
     */
    public void setEndTime(Date value) {
        setAttributeInternal(ENDTIME, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getEventDetailsEO() {
        return (EntityImpl) getAttributeInternal(EVENTDETAILSEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setEventDetailsEO(EntityImpl value) {
        setAttributeInternal(EVENTDETAILSEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCandidateDataEO() {
        return (EntityImpl) getAttributeInternal(CANDIDATEDATAEO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCandidateDataEO(EntityImpl value) {
        setAttributeInternal(CANDIDATEDATAEO, value);
    }

    /**
     * @param candidateEmailId key constituent
     * @param interviewerEmailId key constituent
     * @param eventId key constituent
     * @param startTime key constituent
     * @param endTime key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String candidateEmailId, String interviewerEmailId, Integer eventId,
                                       Date startTime, Date endTime) {
        return new Key(new Object[] { candidateEmailId, interviewerEmailId, eventId, startTime, endTime });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EntityObject.InterviewDetailsEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}

