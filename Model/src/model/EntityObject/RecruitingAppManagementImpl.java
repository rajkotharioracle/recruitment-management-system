package model.EntityObject;
import model.EntityObject.common.RecruitingAppManagement;
import model.ViewObject.EventCandidatefordetailpageImpl;
import model.ViewObject.eventdetailswithnameImpl;


import model.ViewObject.interviewerdataforeventpageImpl;

import model.ViewObject.interviewersImpl;

import model.ViewObjectQB.EventCandidateDatawithNameImpl;
import model.ViewObjectQB.approinterviewerImpl;
import model.ViewObjectQB.interviewdetailQBImpl;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 31 15:39:04 IST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RecruitingAppManagementImpl extends ApplicationModuleImpl implements RecruitingAppManagement {
    /**
     * This is the default constructor (do not remove).
     */
    public RecruitingAppManagementImpl() {
    }

    /**
     * Container's getter for approinterviewer1.
     * @return approinterviewer1
     */
    public approinterviewerImpl getapprointerviewer1() {
        return (approinterviewerImpl) findViewObject("approinterviewer1");
    }

    /**
     * Container's getter for EventCandidateDatawithName1.
     * @return EventCandidateDatawithName1
     */
    public EventCandidateDatawithNameImpl getEventCandidateDatawithName1() {
        return (EventCandidateDatawithNameImpl) findViewObject("EventCandidateDatawithName1");
    }

    /**
     * Container's getter for interviewdetailQB1.
     * @return interviewdetailQB1
     */
    public interviewdetailQBImpl getinterviewdetailQB1() {
        return (interviewdetailQBImpl) findViewObject("interviewdetailQB1");
    }

    /**
     * Container's getter for eventdetailswithname1.
     * @return eventdetailswithname1
     */
    public eventdetailswithnameImpl geteventdetailswithname1() {
        return (eventdetailswithnameImpl) findViewObject("eventdetailswithname1");
    }

    /**
     * Container's getter for EventDetails1.
     * @return EventDetails1
     */
    public ViewObjectImpl getEventDetails1() {
        return (ViewObjectImpl) findViewObject("EventDetails1");
    }

    /**
     * Container's getter for EventInterviewerDetails1.
     * @return EventInterviewerDetails1
     */
    public ViewObjectImpl getEventInterviewerDetails1() {
        return (ViewObjectImpl) findViewObject("EventInterviewerDetails1");
    }

    /**
     * Container's getter for EventCandidatefordetailpage1.
     * @return EventCandidatefordetailpage1
     */
    public EventCandidatefordetailpageImpl getEventCandidatefordetailpage1() {
        return (EventCandidatefordetailpageImpl) findViewObject("EventCandidatefordetailpage1");
    }
    
    public String getEventId(String eventid){
 //       System.out.println("hello" + eventid);
        ViewObjectImpl usersVO = this.geteventdetailswithname1();
        usersVO.setApplyViewCriteriaName("eventdetailswithnameCriteria");
        usersVO.setNamedWhereClauseParam("pid1",eventid);
        usersVO.executeQuery();
//        System.out.println(usersVO);
        Row usersVORow = usersVO.first();
//        System.out.println(usersVORow);
  //      System.out.println(usersVORow.getAttribute("EVENT_ID").toString());
        return (usersVORow != null) ? usersVORow.getAttribute("EVENT_ID").toString(): null;
    }
    
    public String getEventIdforcandidate(String eventid){
        //System.out.println("hello" + eventid);
        ViewObjectImpl usersVO = this.getEventCandidatefordetailpage1();
        usersVO.setApplyViewCriteriaName("EventCandidatefordetailpageCriteria");
        usersVO.setNamedWhereClauseParam("pid1",eventid);
        usersVO.executeQuery();
    //        System.out.println(usersVO);
        Row usersVORow = usersVO.first();
    //        System.out.println(usersVORow);
    //      System.out.println(usersVORow.getAttribute("EVENT_ID").toString());
        return (usersVORow != null) ? usersVORow.getAttribute("EVENT_ID").toString(): null;
    }
    
    public String getEventIdforinterviewer(String eventid){
       // System.out.println("hello" + eventid);
        ViewObjectImpl usersVO = this.getinterviewers1();
        usersVO.setApplyViewCriteriaName("interviewersCriteria");
        usersVO.setNamedWhereClauseParam("pid1",eventid);
        usersVO.executeQuery();
    //        System.out.println(usersVO);
        Row usersVORow = usersVO.first();
    //        System.out.println(usersVORow);
    //      System.out.println(usersVORow.getAttribute("EVENT_ID").toString());
        return (usersVORow != null) ? usersVORow.getAttribute("EVENT_ID").toString(): null;
    }
    
    
    public String getEventIdforinterviewerforadd(String eventid){
       // System.out.println("hello" + eventid);
        ViewObjectImpl usersVO = this.getInterviewerDataVO1();
        usersVO.setApplyViewCriteriaName("InterviewerDataVOCriteria");
        usersVO.setNamedWhereClauseParam("pid1",eventid);
        usersVO.executeQuery();
    //        System.out.println(usersVO);
        Row usersVORow = usersVO.first();
    //        System.out.println(usersVORow);
    //      System.out.println(usersVORow.getAttribute("EVENT_ID").toString());
        return (usersVORow != null) ? usersVORow.getAttribute("EVENT_ID").toString(): null;
    }
    
    public String getEventIdforeventinterviewerforadd(String eventid){
       // System.out.println("hello" + eventid);
        ViewObjectImpl usersVO = this.getEventInterviewerDetailsVO1();
        usersVO.setApplyViewCriteriaName("EventInterviewerDetailsVOCriteria");
        usersVO.setNamedWhereClauseParam("pid1",eventid);
        usersVO.executeQuery();
    //        System.out.println(usersVO);
        Row usersVORow = usersVO.first();
    //        System.out.println(usersVORow);
    //      System.out.println(usersVORow.getAttribute("EVENT_ID").toString());
        return (usersVORow != null) ? usersVORow.getAttribute("EVENT_ID").toString(): null;
    }
    
    public String getEventidforAssigning(String eventId){
        //String eveid = EventSelection.fetcheventid();
        System.out.println("hello" + eventId);
        ViewObjectImpl usersVO = this.getEventCandidateDatawithName1();
        usersVO.setApplyViewCriteriaName("EventCandidateDatawithNameCriteria");
        usersVO.setNamedWhereClauseParam("pid",eventId);
        usersVO.executeQuery();
    //        System.out.println(usersVO);
        Row usersVORow = usersVO.first();
    //        System.out.println(usersVORow);
    //      System.out.println(usersVORow.getAttribute("EVENT_ID").toString());
        return (usersVORow != null) ? usersVORow.getAttribute("EVENT_ID").toString(): null;
    }

    /**
     * Container's getter for interviewerdataforeventpage1.
     * @return interviewerdataforeventpage1
     */
    public interviewerdataforeventpageImpl getinterviewerdataforeventpage1() {
        return (interviewerdataforeventpageImpl) findViewObject("interviewerdataforeventpage1");
    }

    /**
     * Container's getter for UsersMaster1.
     * @return UsersMaster1
     */
    public ViewObjectImpl getUsersMaster1() {
        return (ViewObjectImpl) findViewObject("UsersMaster1");
    }

    /**
     * Container's getter for InterviewerDataVO1.
     * @return InterviewerDataVO1
     */
    public ViewObjectImpl getInterviewerDataVO1() {
        return (ViewObjectImpl) findViewObject("InterviewerDataVO1");
    }

    /**
     * Container's getter for EventInterviewerDetailsVO1.
     * @return EventInterviewerDetailsVO1
     */
    public ViewObjectImpl getEventInterviewerDetailsVO1() {
        return (ViewObjectImpl) findViewObject("EventInterviewerDetailsVO1");
    }

    /**
     * Container's getter for interviewetforadding.
     * @return interviewetforadding
     */
    public ViewLinkImpl getinterviewetforadding() {
        return (ViewLinkImpl) findViewLink("interviewetforadding");
    }

    /**
     * Container's getter for EventInterviewerDetailsVO2.
     * @return EventInterviewerDetailsVO2
     */
    public ViewObjectImpl getEventInterviewerDetailsVO2() {
        return (ViewObjectImpl) findViewObject("EventInterviewerDetailsVO2");
    }

    /**
     * Container's getter for interviewerdataforeventpage2.
     * @return interviewerdataforeventpage2
     */
    public interviewerdataforeventpageImpl getinterviewerdataforeventpage2() {
        return (interviewerdataforeventpageImpl) findViewObject("interviewerdataforeventpage2");
    }

    /**
     * Container's getter for eventinterviewer_interviewer.
     * @return eventinterviewer_interviewer
     */
    public ViewLinkImpl geteventinterviewer_interviewer() {
        return (ViewLinkImpl) findViewLink("eventinterviewer_interviewer");
    }

    /**
     * Container's getter for interviewers1.
     * @return interviewers1
     */
    public interviewersImpl getinterviewers1() {
        return (interviewersImpl) findViewObject("interviewers1");
    }
}
